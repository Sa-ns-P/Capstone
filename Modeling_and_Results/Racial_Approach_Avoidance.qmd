---
title: "Capstone stuff combined"
format: html
editor: visual
---

```{r}
library(lme4)
library(lmerTest)
library(tidyverse)
source("Functions.R")
library(ggplot2)
```

### Data Set-up

```{r}
names_wwbcol = read.csv('Names/merged_names.csv') #summarized demographic dataset
namesfull1 = read.csv('Names/newnamestoanalyze.csv') #trial dataset
namesgen = read.csv('Names/unique_participants_newnames.csv') #trial dataset
```

```{r}
faces_wwbcol = read.csv('Faces/merged_faces.csv') #summarized demographic dataset
facesfull1 = read.csv('Faces/newfacestoanalyze.csv') #trial dataset
facesgen = read.csv('Faces/unique_participants_newfaces.csv') #trial dataset
```

```{r}
#names setup (implicit/explicit)

#imputation: 0 and NA with 0.01 (smallest ratios), Inf with max value (rounded up towards nearest hundreth)
newnames = names_wwbcol %>% 
  mutate(white_black = ifelse(is.na(white_black), 0.01, white_black)) %>% 
  mutate(white_black = ifelse(white_black == 0, 0.01, white_black)) %>% 
  mutate(log_white_black = ifelse(white_black == Inf, 5.65,
                                  log(white_black))) %>% 
  mutate(white_black = ifelse(white_black == Inf, exp(5.65), white_black)) %>% 
  select(participant, white_black, log_white_black)
  
namesfull = namesfull1 %>% 
  select(participant, stimuli, valence, movement, response_time, ImpVsExp, Age,
      Sex, Race = RaceEthnicity, Political_1, Zip, Occupations, RaceEthnicity,
      
      FTBlack_1, VCNegBlack_1, VCPosBlack_1, ECBlack_Neighbors,
      ECBlack_WorkColleagues, ECBlack_CloseFriends, ECBlack_Married, 
      FTWhite_1, VCNegWhite_1, VCPosWhite_1, ECWhite_Neighbors,
      ECWhite_WorkColleagues, ECWhite_CloseFriends, ECWhite_Married,
      
      Unclear, Comments, accuracy_total, Openness, Conscientiousness,
      Extraversion, Agreeableness, Neuroticism,
      
      namesrace = race, namesgender = gender #variables
      ) %>%  mutate(
      Race = ifelse(
        Race == "White alone, not Hispanic or Latino", 'White', 'Black'))

#left join with added racial demographic variable
namesfull = namesfull %>% left_join(newnames, by = 'participant')

#drop accuracy total below 0.7
namesfull = namesfull %>% filter(accuracy_total >= 0.70)

#get ranking here, instead of characters (reduces dimention)
cols = c('ECBlack_Neighbors', 'ECBlack_WorkColleagues', 'ECBlack_CloseFriends', 'ECBlack_Married', 'ECWhite_Neighbors','ECWhite_WorkColleagues', 'ECWhite_CloseFriends', 'ECWhite_Married')

for(c in cols){
  c_index = grep(c, colnames(namesfull))
  namesfull[,c_index] = ifelse(namesfull[,c_index] == 'None', 1, namesfull[,c_index])
  namesfull[,c_index] = ifelse(namesfull[,c_index] == 'All', 6, namesfull[,c_index])
  namesfull[,c_index] = as.numeric(namesfull[,c_index])
}
dim(namesfull)

i_namesfull = namesfull %>% filter(ImpVsExp == 'Implicit')
e_namesfull = namesfull %>% filter(ImpVsExp == 'Explicit')

#change ref levels
e_namesfull= e_namesfull %>% mutate(movement= as.factor(movement))
e_namesfull$movement = relevel(e_namesfull$movement,ref="Avoid")

i_namesfull= i_namesfull %>% mutate(movement= as.factor(movement))
i_namesfull$movement = relevel(i_namesfull$movement,ref="Avoid")
```

```{r}
#faces
newfaces = faces_wwbcol %>% select(participant, white_black)

#imputation: 0 and NA with 0.01 (smallest ratios), Inf with max value (rounded up towards nearest hundreth)
newfaces = faces_wwbcol %>% 
  mutate(white_black = ifelse(is.na(white_black) | white_black == 0, 0.01, white_black)) %>% 
  mutate(log_white_black = ifelse(white_black == Inf, 5.65, log(white_black))) %>% 
  mutate(white_black = ifelse(white_black == Inf, exp(5.65), white_black)) %>% 
  select(participant, white_black)

facesfull = facesfull1 %>% 
  select(participant, stimuli, valence, movement, response_time, ImpVsExp, Age,
      Sex, Race = RaceEthnicity, Political_1, Zip, Occupations, RaceEthnicity,
      
      FTBlack_1, VCNegBlack_1, VCPosBlack_1, ECBlack_Neighbors,
      ECBlack_WorkColleagues, ECBlack_CloseFriends, ECBlack_Married, 
      FTWhite_1, VCNegWhite_1, VCPosWhite_1, ECWhite_Neighbors,
      ECWhite_WorkColleagues, ECWhite_CloseFriends, ECWhite_Married,
      
      Unclear, Comments, accuracy_total, Openness, Conscientiousness,
      Extraversion, Agreeableness, Neuroticism,
      
      facesrace = race, facesgender = gender #variables
      ) %>%  mutate(
      Race = ifelse(
        Race == "White alone, not Hispanic or Latino", 'White', 'Black'))
         
#left join with added racial demographic variable
facesfull = facesfull %>% left_join(newfaces, by = 'participant')

#drop accuracy total below 0.7
facesfull = facesfull %>% filter(accuracy_total >= 0.7)

#get ranking here, instead of characters (reduces dimention)
cols = c('ECBlack_Neighbors', 'ECBlack_WorkColleagues', 'ECBlack_CloseFriends', 'ECBlack_Married', 'ECWhite_Neighbors','ECWhite_WorkColleagues', 'ECWhite_CloseFriends', 'ECWhite_Married')

for(c in cols){
  c_index = grep(c, colnames(facesfull))
  facesfull[,c_index] = ifelse(facesfull[,c_index] == 'None', 1, facesfull[,c_index])
  facesfull[,c_index] = ifelse(facesfull[,c_index] == 'All', 6, facesfull[,c_index])
  facesfull[,c_index] = as.numeric(facesfull[,c_index])
}

i_facesfull = facesfull %>% filter(ImpVsExp == 'Implicit')
e_facesfull = facesfull %>% filter(ImpVsExp == 'Explicit')

#change ref levels
e_facesfull = e_facesfull %>% mutate(movement= as.factor(movement))
e_facesfull$movement = relevel(e_facesfull$movement,ref="Avoid")

i_facesfull = i_facesfull %>% mutate(movement= as.factor(movement))
i_facesfull$movement = relevel(i_facesfull$movement,ref="Avoid")
```

### EDA - Names

```{r}
# Narrower curve of response times for the Explicit stimuli. Implicit appears to have a broader curve but faster response times.
namesfull %>%
  group_by(ImpVsExp)%>%
  ggplot(aes(x=log(response_time), fill=ImpVsExp))+geom_density(alpha=0.5)

# Within the explicit dataset, approaching black participants seems to be faster than avoiding. Approaching white participants seems to have a broader curve.
e_namesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=log(response_time),fill=movement))+geom_density(alpha=0.5)+facet_grid(~namesrace)

# Not a notable difference in Implicit.
i_namesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=log(response_time),fill=movement))+geom_density(alpha=0.5)+facet_grid(~namesrace)

# Black participants seem to approach black names faster than avoiding.In contrast, they seem to avoid white names faster than approach. White Participants seem to have faster response times while approaching black names compared to avoid. Approaching white names has a narrower distribution than avoiding.
e_namesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=Race,y=log(response_time),fill=movement))+geom_boxplot()+facet_grid(~namesrace) + xlab("Participant Race")

# Not a notable difference in implicit.
i_namesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=Race,y=log(response_time),fill=movement))+geom_boxplot()+facet_grid(~namesrace) + xlab("Participant Race")

# Response time seems to increase with age, possibility of containing cluster groups.
namesfull%>%
  ggplot(aes(x=Age, y=log(response_time))) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")

# Response time seems to be uniform with response to white to black proportions.
namesfull%>%
  ggplot(aes(x=log_white_black, y=log(response_time))) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
```

### EDA - Faces

```{r}
# Implicit seems to have a broader curve. The reponse times are not as differentiable as in Names.
facesfull %>%
  group_by(ImpVsExp)%>%
  ggplot(aes(x=log(response_time), fill=ImpVsExp))+geom_density(alpha=0.5)

# Within the explicit dataset, avoiding black faces seems to be faster than approaching. Approaching white faces has a narrower curve and faster response times than avoiding white faces.
e_facesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=log(response_time),fill=movement))+geom_density(alpha=0.5)+facet_grid(~facesrace)

# Not a notable difference in Implicit.
i_namesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=log(response_time),fill=movement))+geom_density(alpha=0.5)+facet_grid(~namesrace)

# Approaching black faces has a narrower distribution of response time than avoiding black faces for Black participants. Avoiding White faces has a wider distribution but fewer outliers compared to approaching. For White Participants, avoiding black faces seems to be faster than approaching Approaching White faces is faster than avoiding. 
e_facesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=Race,y=log(response_time),fill=movement))+geom_boxplot()+facet_grid(~facesrace) + xlab("Participant Race")

# Not a notable difference in implicit.
i_facesfull%>%
  group_by(movement)%>%
  ggplot(aes(x=Race,y=log(response_time),fill=movement))+geom_boxplot()+facet_grid(~facesrace) + xlab("Participant Race")

# Response time seems to increase with age, possibility of containing cluster groups.
facesfull%>%
  ggplot(aes(x=Age, y=log(response_time))) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")

# Response time seems to be uniform with response to white to black proportions.
facesfull%>%
  ggplot(aes(x=log(white_black+0.0001), y=log(response_time))) +
  stat_density_2d(aes(fill = ..level..), geom = "polygon", colour="white")
```

### Explicit Names

```{r}
e_m_full = lmer(log(response_time) ~
      movement + Age + Sex + Race + Political_1 + Occupations + white_black + 
        
      FTBlack_1 + VCNegBlack_1 + VCPosBlack_1 + ECBlack_Neighbors +
      ECBlack_WorkColleagues + ECBlack_CloseFriends + ECBlack_Married +
      FTWhite_1 + VCNegWhite_1 + VCPosWhite_1 + ECWhite_Neighbors +
      ECWhite_WorkColleagues + ECWhite_CloseFriends + ECWhite_Married +
      
      Openness + Conscientiousness + Extraversion + Agreeableness + Neuroticism +
      namesrace + namesgender + 
        movement * namesrace * Race
      + (1|participant), 
      
      data=e_namesfull)

summary(e_m_full)
```

```{r}
e_m_full2 = lmer(log(response_time) ~
      movement + Age + Race + 
       VCPosWhite_1 +
        movement * namesrace * Race
      + (1|participant), 
      
      data=e_namesfull)

summary(e_m_full2)

# White people approaching White Names.
White_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "namesracewhite",
    "movementApproach:namesracewhite",
    "movementApproach:RaceWhite",
    "RaceWhite:namesracewhite",
    "movementApproach:RaceWhite:namesracewhite"
  )
)
1 - exp(White_Part_A_WN)


#Black People approaching White Names
Black_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "namesracewhite",
    "movementApproach:namesracewhite"
  )
)
exp(Black_Part_A_WN)


#White People approaching Black Names
White_Part_A_BN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "movementApproach:RaceWhite"
  )
)
1 - exp(White_Part_A_BN) 


# White people avoiding White Names.
White_Part_Av_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("RaceWhite", "namesracewhite", "RaceWhite:namesracewhite")
)
1 - exp(White_Part_Av_WN)



# White people approach White Names Vs Black Names
White_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "namesracewhite",
    "movementApproach:namesracewhite",
    "RaceWhite:namesracewhite",
    "movementApproach:RaceWhite:namesracewhite"
  )
)
exp(White_Part_A_WNvsBN)


# Black people approach White Names Vs Black Names
Black_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("namesracewhite", "movementApproach:namesracewhite")
)
exp(-Black_Part_A_WNvsBN)


# White people avoid White Names Vs Black Names
White_Part_Av_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCPosWhite_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("namesracewhite", "RaceWhite:namesracewhite")
)
exp(White_Part_Av_WNvsBN)
```

### Explicit Faces

```{r}
e_m_full_faces = lmer(log(response_time) ~
      movement + Age + Sex + Race + Political_1 + Occupations + white_black + 
      
      FTBlack_1 + VCNegBlack_1 + VCPosBlack_1 + ECBlack_Neighbors +
      ECBlack_WorkColleagues + ECBlack_CloseFriends + ECBlack_Married +
      FTWhite_1 + VCNegWhite_1 + VCPosWhite_1 + ECWhite_Neighbors +
      ECWhite_WorkColleagues + ECWhite_CloseFriends + ECWhite_Married +
      
      Openness + Conscientiousness + Extraversion + Agreeableness + Neuroticism +
      facesrace + facesgender + 
        movement * facesrace * Race
      + (1|participant), 
      
      data=e_facesfull)

summary(e_m_full_faces)
```

```{r}
e_m_full_faces2 = lmer(log(response_time) ~
      movement + Age + VCNegWhite_1 +
        movement * facesrace * Race
      + (1|participant), 
      
      data=e_facesfull)

summary(e_m_full_faces2)


# White people approaching White faces
White_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "facesracewhite",
    "movementApproach:facesracewhite",
    "movementApproach:RaceWhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WN)


#Black People approaching White faces
Black_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "facesracewhite",
    "movementApproach:facesracewhite"
  )
)
exp(Black_Part_A_WN)


#White People approaching Black faces
White_Part_A_BN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "movementApproach:RaceWhite"
  )
)
exp(White_Part_A_BN) 


# White people avoiding White faces
White_Part_Av_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("RaceWhite", "facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WN)



# White people approach White faces Vs Black faces
White_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c(
    "facesracewhite",
    "movementApproach:facesracewhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WNvsBN)


# Black people approach White faces Vs Black faces
Black_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("facesracewhite", "movementApproach:facesracewhite")
)
exp(-Black_Part_A_WNvsBN)


# White people avoid White faces Vs Black faces
White_Part_Av_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Race",
    "VCNegWhite_1",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = e_namesfull,
  coef_interest = c("facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WNvsBN)
```

### Implicit Names

```{r}
i_m_full = lmer(log(response_time) ~
      movement + Age + Sex + Race + Political_1 + Occupations + white_black + 
      
      FTBlack_1 + VCNegBlack_1 + VCPosBlack_1 + ECBlack_Neighbors +
      ECBlack_WorkColleagues + ECBlack_CloseFriends + ECBlack_Married +
      FTWhite_1 + VCNegWhite_1 + VCPosWhite_1 + ECWhite_Neighbors +
      ECWhite_WorkColleagues + ECWhite_CloseFriends + ECWhite_Married +
      
      Openness + Conscientiousness + Extraversion + Agreeableness + Neuroticism +
      namesrace + namesgender + 
        movement * namesrace * Race
      + (1|participant), 
      
      data=i_namesfull)

summary(i_m_full)
```

```{r}
i_m_full2 = lmer(log(response_time) ~
      movement + Age + Sex + Race + Political_1 + 
      FTBlack_1 + 
        movement * namesrace * Race
      + (1|participant), 
      
      data=i_namesfull)

summary(i_m_full2)

# White people approaching White Names.
White_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "facesracewhite",
    "movementApproach:facesracewhite",
    "movementApproach:RaceWhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WN)


#Black People approaching White Names
Black_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c(
    "movementApproach",
    "facesracewhite",
    "movementApproach:facesracewhite"
  )
)
exp(Black_Part_A_WN)


#White People approaching Black Names
White_Part_A_BN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "movementApproach:RaceWhite"
  )
)
exp(White_Part_A_BN) 


# White people avoiding White Names.
White_Part_Av_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
   "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c("RaceWhite", "facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WN)



# White people approach White Names Vs Black Names
White_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c(
    "facesracewhite",
    "movementApproach:facesracewhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WNvsBN)


# Black people approach White Names Vs Black Names
Black_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
   "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c("facesracewhite", "movementApproach:facesracewhite")
)
exp(-Black_Part_A_WNvsBN)


# White people avoid White Names Vs Black Names
White_Part_Av_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
   "movement",
    "Age",
    "Sex",
    "Race",
    "Political_1",
    "FTBlack_1",
    "movement*namesrace*Race"
  ),
  group_var = "participant",
  dataset = i_namesfull,
  coef_interest = c("facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WNvsBN)
```

### Implicit Faces

```{r}
i_m_full_faces = lmer(log(response_time) ~
      movement + Age + Sex + Race + Political_1 + Occupations + white_black + 
      
      FTBlack_1 + VCNegBlack_1 + VCPosBlack_1 + ECBlack_Neighbors +
      ECBlack_WorkColleagues + ECBlack_CloseFriends + ECBlack_Married +
      FTWhite_1 + VCNegWhite_1 + VCPosWhite_1 + ECWhite_Neighbors +
      ECWhite_WorkColleagues + ECWhite_CloseFriends + ECWhite_Married +
      
      Openness + Conscientiousness + Extraversion + Agreeableness + Neuroticism +
      facesrace + facesgender + 
        movement * facesrace * Race
      + (1|participant), 
      
      data=i_facesfull)

summary(i_m_full_faces)
```

```{r}
i_m_full_faces2 = lmer(log(response_time) ~
      movement + Age + Neuroticism + white_black + #Occupations +
        movement * facesrace * Race
      + (1|participant), 
      
      data=i_facesfull)

summary(i_m_full_faces2)


# White people approaching White faces
White_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "facesracewhite",
    "movementApproach:facesracewhite",
    "movementApproach:RaceWhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WN)


#Black People approaching White faces
Black_Part_A_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c(
    "movementApproach",
    "facesracewhite",
    "movementApproach:facesracewhite"
  )
)
exp(Black_Part_A_WN)


#White People approaching Black faces
White_Part_A_BN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c(
    "movementApproach",
    "RaceWhite",
    "movementApproach:RaceWhite"
  )
)
exp(White_Part_A_BN) 


# White people avoiding White faces
White_Part_Av_WN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c("RaceWhite", "facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WN)


# White people approach White faces Vs Black faces
White_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c(
    "facesracewhite",
    "movementApproach:facesracewhite",
    "facesracewhite:RaceWhite",
    "movementApproach:facesracewhite:RaceWhite"
  )
)
exp(White_Part_A_WNvsBN)


# Black people approach White faces Vs Black faces
Black_Part_A_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c("facesracewhite", "movementApproach:facesracewhite")
)
exp(-Black_Part_A_WNvsBN)


# White people avoid White faces Vs Black faces
White_Part_Av_WNvsBN = bootstrap_func(
  target = "log(response_time)",
  ind_var = c(
    "movement",
    "Age",
    "Neuroticism",
    "white_black",
    "movement*facesrace*Race"
  ),
  group_var = "participant",
  dataset = i_facesfull,
  coef_interest = c("facesracewhite", "facesracewhite:RaceWhite")
)
exp(White_Part_Av_WNvsBN)
```
